# Напишите функцию, которая будет принимать номер кредитной карты и
# показывать только последние 4 цифры. Остальные цифры должны заменяться
# звездочками

# def bank(Nomer):
#     Nomer2 = Nomer.replace(' ', '')
#     Nomer3 = Nomer
#     if Nomer2.isalpha() == True:
#         print('номер состоит только из цифр (меня не обманешь)')
#     elif len(Nomer2) > 16 or len(Nomer2) < 16:
#         print('Вы ошиблись с количеством цифр, повторите попытку, хотя это ваше дело)')
#     else:
#         Nomer3 = list(Nomer3)
#         Nomer3[:15:] = "**** **** **** "
#         Nomer3 = ''.join(Nomer3)
#     print(Nomer3)
# Nomer = input('Введите номер кредитной карты (или не вводите): ')
# bank(Nomer)

# Напишите функцию, которая проверяет: является ли слово палиндромом

# def polidrom(a):
#     a = str(a)
#     a = a.strip()
#     for i in a:
#         if i.isdigit() == True:
#             print("Вы написали цифру, не надо так")
#             exit()
#         elif i == " ":
#             print('Вы написали несколько слов, не надо так')
#             exit()
#         elif i.isalpha():
#             pass
#         else:
#             print("Кажеться вы написали что-то совсем не то")
#             exit()
#     if a == a[::-1]:
#         print('Полидром')
#
#     else:
#         print("Не полидром")
# a = input('Введите слово проверяемое на полидром: ')
# polidrom(a)

# Класс Tomato:
# 1. Создайте класс Tomato
# 2. Создайте статическое свойство states, которое будет содержать все стадии
# созревания помидора
# 3. Создайте метод __init__(), внутри которого будут определены два динамических
# protected свойства: 1) _index - передается параметром и 2) _state - принимает первое
# значение из словаря states
# 4. Создайте метод grow(), который будет переводить томат на следующую стадию
# созревания
# 5. Создайте метод is_ripe(), который будет проверять, что томат созрел (достиг
# последней стадии созревания)
# Класс TomatoBush

# 1. Создайте класс TomatoBush
# 2. Определите метод __init__(), который будет принимать в качестве параметра
# количество томатов и на его основе будет создавать список объектов класса
# Tomato. Данный список будет храниться внутри динамического свойства tomatoes.
# 3. Создайте метод grow_all(), который будет переводить все объекты из списка
# томатов на следующий этап созревания
# 4. Создайте метод all_are_ripe(), который будет возвращать True, если все томаты из
# списка стали спелыми
# 5. Создайте метод give_away_all(), который будет чистить список томатов после
# сбора урожая

# Класс Gardener
# 1. Создайте класс Gardener
# 2. Создайте метод __init__(), внутри которого будут определены два динамических
# свойства: 1) name - передается параметром, является публичным и 2) _plant -
# принимает объект класса Tomato, является protected
# 3. Создайте метод work(), который заставляет садовника работать, что позволяет
# растению становиться более зрелым
# 4. Создайте метод harvest(), который проверяет, все ли плоды созрели. Если все -
# садовник собирает урожай. Если нет - метод печатает предупреждение.

class Tomato:
    states = {1: "Росток", 2: "Созревший плод"}

    def __init__(self, state=states[1]):
        self._index = 1
        self.state = state

    def grow(self):
        self.state = Tomato.states[2]
        return self.state

    def is_ripe(self):
        if Tomato.grow(self) == 'Созревший плод':
            return True

# t = Tomato()
# print(t.is_ripe())

class TomatoBush:
    def __init__(self):
        self.tomatoes = []

    def grow_all(self):
        return Tomato.grow(self)

    def all_are_ripe(self):
        return Tomato.is_ripe(self)

    def give_away_all(self):
        self.tomatoes = []

class Gardener:

    def __init__(self, name):
        self.name = name
        self._plant = Tomato

    def work(self):
        print('Садовник работает в поте лица')

    def harvest(self):
        if Tomato.is_ripe(self) == True:
            print("У нас уже созрели помидоры, а у вас?")
        else:
            print('У нас не созрели(')

